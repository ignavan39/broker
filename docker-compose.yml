version: '3.9'
volumes:
  postgres_data:

services:
  postgres:
    container_name: postgres_calendar
    image: postgres:11.13-alpine
    command:
      - 'postgres'
      - '-c'
      - 'max_connections=50'
      - '-c'
      - 'shared_buffers=1GB'
      - '-c'
      - 'effective_cache_size=4GB'
      - '-c'
      - 'work_mem=16MB'
      - '-c'
      - 'maintenance_work_mem=512MB'
      - '-c'
      - 'random_page_cost=1.1'
      - '-c'
      - 'temp_file_limit=10GB'
      - '-c'
      - 'log_min_duration_statement=200ms'
      - '-c'
      - 'idle_in_transaction_session_timeout=10s'
      - '-c'
      - 'lock_timeout=1s'
      - '-c'
      - 'statement_timeout=60s'
      - '-c'
      - 'shared_preload_libraries=pg_stat_statements'
      - '-c'
      - 'pg_stat_statements.max=10000'
      - '-c'
      - 'pg_stat_statements.track=all'
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-calendar_db}
      POSTGRES_USER: ${DATABASE_USER:-user}
      POSTGRES_PASSWORD: ${DATABASE_PASS:-user}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DATABASE_USER:-user} -d ${DATABASE_NAME:-calendar_db}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      calendar:
        ipv4_address: 171.4.4.11
        aliases:
          - postgres.calendar.loc

  calendar:
    environment: 
      NODE_ENV: production
    container_name: calendar_app
    depends_on:
      - postgres
    build: 
      context: .
      dockerfile: ./docker/app.dockerfile
    ports:
     - 8080:8080
    networks:
      calendar:
        ipv4_address: 171.4.4.12
        aliases:
          - app.calendar.loc
    command: yarn start:calendar:prod
  
networks:
  calendar:
    name: calendar
    ipam:
      config:
        - subnet: "171.4.4.0/24"